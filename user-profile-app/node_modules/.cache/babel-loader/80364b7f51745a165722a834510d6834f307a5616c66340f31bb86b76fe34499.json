{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assessment\\\\Mobigic Technologies Test Assessment\\\\user_profile_app\\\\src\\\\pages\\\\UploadFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MongoClient } from 'mongodb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadFile = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const uploadFile = async () => {\n    try {\n      const client = new MongoClient('mongodb://localhost:27017/');\n      await client.connect();\n      const db = client.db('file_database');\n      const collection = db.collection('files');\n\n      // Generate unique code\n      const uniqueCode = generateUniqueCode();\n\n      // Read file data\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const fileData = reader.result;\n\n        // Insert file into MongoDB\n        await collection.insertOne({\n          filename: file.name,\n          data: fileData,\n          code: uniqueCode\n        });\n        setUploadStatus('File uploaded successfully with unique code: ' + uniqueCode);\n        await client.close();\n      };\n      reader.readAsDataURL(file);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setUploadStatus('Error uploading file');\n    }\n  };\n  const generateUniqueCode = () => {\n    // Generate a random 6-character alphanumeric code\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    let code = '';\n    for (let i = 0; i < 6; i++) {\n      code += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return code;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      disabled: !file,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadFile, \"TrDKe7Vv9s9wZuOzXNj8ZJyQMao=\");\n_c = UploadFile;\nexport default UploadFile;\n\n// import React, { useState } from 'react';\n\n// const UploadFile = () => {\n//     const [file, setFile] = useState(null);\n\n//     const handleFileChange = (event) => {\n//         setFile(event.target.files[0]);\n//     };\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n\n//         if (!file) {\n//             alert('Please select a file.');\n//             return;\n//         }\n\n//         try {\n//             const formData = new FormData();\n//             formData.append('file', file);\n//             const response = await fetch('http://localhost:5000/uploadfile', {\n//                 method: 'POST',\n//                 body: formData\n//             });\n\n//             const data = await response.json();\n\n//             console.log(data);\n//             alert('File uploaded successfully!');\n//         } catch (error) {\n//             console.error('Error:', error);\n//             alert('Failed to upload file.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <div className='container'>\n//                 <div className='row'>\n//                     <div className='col-md-4'></div>\n//                     <div className='col-md-4 col-sm-12'>\n//                         <h2>File Upload</h2>\n//                         <form onSubmit={handleSubmit}>\n//                             <div className=\"mb-3\">\n//                                 <input className=\"form-control\" type=\"file\" id=\"formFileMultiple\" onChange={handleFileChange} />\n//                             </div>\n//                             <button type=\"submit\" className='btn btn-primary'>Upload</button>\n//                         </form>\n//                     </div>\n//                     <div className='col-md-4'></div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["React","useState","MongoClient","jsxDEV","_jsxDEV","UploadFile","_s","file","setFile","uploadStatus","setUploadStatus","handleFileChange","e","target","files","uploadFile","client","connect","db","collection","uniqueCode","generateUniqueCode","reader","FileReader","onload","fileData","result","insertOne","filename","name","data","code","close","readAsDataURL","error","console","characters","i","charAt","Math","floor","random","length","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Assessment/Mobigic Technologies Test Assessment/user_profile_app/src/pages/UploadFile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst UploadFile = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const uploadFile = async () => {\r\n    try {\r\n      const client = new MongoClient('mongodb://localhost:27017/');\r\n      await client.connect();\r\n      const db = client.db('file_database');\r\n      const collection = db.collection('files');\r\n\r\n      // Generate unique code\r\n      const uniqueCode = generateUniqueCode();\r\n\r\n      // Read file data\r\n      const reader = new FileReader();\r\n      reader.onload = async () => {\r\n        const fileData = reader.result;\r\n\r\n        // Insert file into MongoDB\r\n        await collection.insertOne({\r\n          filename: file.name,\r\n          data: fileData,\r\n          code: uniqueCode\r\n        });\r\n        setUploadStatus('File uploaded successfully with unique code: ' + uniqueCode);\r\n        await client.close();\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      setUploadStatus('Error uploading file');\r\n    }\r\n  };\r\n\r\n  const generateUniqueCode = () => {\r\n    // Generate a random 6-character alphanumeric code\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n    let code = '';\r\n    for (let i = 0; i < 6; i++) {\r\n      code += characters.charAt(Math.floor(Math.random() * characters.length));\r\n    }\r\n    return code;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload File</h2>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={uploadFile} disabled={!file}>Upload</button>\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFile;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const UploadFile = () => {\r\n//     const [file, setFile] = useState(null);\r\n\r\n//     const handleFileChange = (event) => {\r\n//         setFile(event.target.files[0]);\r\n//     };\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n\r\n//         if (!file) {\r\n//             alert('Please select a file.');\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const formData = new FormData();\r\n//             formData.append('file', file);\r\n//             const response = await fetch('http://localhost:5000/uploadfile', {\r\n//                 method: 'POST',\r\n//                 body: formData\r\n//             });\r\n\r\n//             const data = await response.json();\r\n\r\n//             console.log(data);\r\n//             alert('File uploaded successfully!');\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//             alert('Failed to upload file.');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className='container'>\r\n//                 <div className='row'>\r\n//                     <div className='col-md-4'></div>\r\n//                     <div className='col-md-4 col-sm-12'>\r\n//                         <h2>File Upload</h2>\r\n//                         <form onSubmit={handleSubmit}>\r\n//                             <div className=\"mb-3\">\r\n//                                 <input className=\"form-control\" type=\"file\" id=\"formFileMultiple\" onChange={handleFileChange} />\r\n//                             </div>\r\n//                             <button type=\"submit\" className='btn btn-primary'>Upload</button>\r\n//                         </form>\r\n//                     </div>\r\n//                     <div className='col-md-4'></div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default UploadFile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,MAAM,GAAG,IAAId,WAAW,CAAC,4BAA4B,CAAC;MAC5D,MAAMc,MAAM,CAACC,OAAO,CAAC,CAAC;MACtB,MAAMC,EAAE,GAAGF,MAAM,CAACE,EAAE,CAAC,eAAe,CAAC;MACrC,MAAMC,UAAU,GAAGD,EAAE,CAACC,UAAU,CAAC,OAAO,CAAC;;MAEzC;MACA,MAAMC,UAAU,GAAGC,kBAAkB,CAAC,CAAC;;MAEvC;MACA,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,YAAY;QAC1B,MAAMC,QAAQ,GAAGH,MAAM,CAACI,MAAM;;QAE9B;QACA,MAAMP,UAAU,CAACQ,SAAS,CAAC;UACzBC,QAAQ,EAAErB,IAAI,CAACsB,IAAI;UACnBC,IAAI,EAAEL,QAAQ;UACdM,IAAI,EAAEX;QACR,CAAC,CAAC;QACFV,eAAe,CAAC,+CAA+C,GAAGU,UAAU,CAAC;QAC7E,MAAMJ,MAAM,CAACgB,KAAK,CAAC,CAAC;MACtB,CAAC;MACDV,MAAM,CAACW,aAAa,CAAC1B,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CxB,eAAe,CAAC,sBAAsB,CAAC;IACzC;EACF,CAAC;EAED,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,MAAMe,UAAU,GAAG,sCAAsC;IACzD,IAAIL,IAAI,GAAG,EAAE;IACb,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BN,IAAI,IAAIK,UAAU,CAACE,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,UAAU,CAACM,MAAM,CAAC,CAAC;IAC1E;IACA,OAAOX,IAAI;EACb,CAAC;EAED,oBACE3B,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAAuC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB3C,OAAA;MAAO4C,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEtC;IAAiB;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD3C,OAAA;MAAQ8C,OAAO,EAAEnC,UAAW;MAACoC,QAAQ,EAAE,CAAC5C,IAAK;MAAAoC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5DtC,YAAY,iBAAIL,OAAA;MAAAuC,QAAA,EAAIlC;IAAY;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACzC,EAAA,CAzDID,UAAU;AAAA+C,EAAA,GAAV/C,UAAU;AA2DhB,eAAeA,UAAU;;AAKzB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}